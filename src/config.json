{
    "gpt_3.5_model": "gpt-3.5-turbo-0125",
    "gpt_4_model": "gpt-4o",
    "gpt_temperature": 0,
    "gpt_top_p": 1,
    "gpt_max_tokens": 3000,
    "system_prompt_code": "You are an expert Playwright Test Automation Engineer and you follow Playwight coding best practices",
    "few_shot_assistant_feature_code": [
      "**Feature file - login.feature**",
        "Feature: SauceDemo Login",
           "Scenario: Successful login with valid credentials",
                "Given I navigate to the SauceDemo login page",
                "When I login with username 'standard_user' and password 'secret_sauce'",
                "Then I should be redirected to the inventory page",

            "Scenario: Unsuccessful login with invalid credentials",
                "Given I navigate to the SauceDemo login page",
                "When I login with username 'invalid_user' and password 'wrong_password'",
                "Then I should see an error message 'Epic sadface: Username and password do not match any user in this service'"
    ],
    "few_shot_assistant_step_code": [
      "// step definitions - login.step.js",
      "const { Given, When, Then } = require('@cucumber/cucumber');",
      "const LoginPage = require('../pages/login.page');",
      "let loginPage;",

      "Given('I navigate to the SauceDemo login page', async function () {",
      "loginPage = new LoginPage(global.page);",
      "await loginPage.navigate();",
      "});",

      "When('I login with username {string} and password {string}', async function (username, password) {",
      "await loginPage.login(username, password);",
      "});",

      "Then('I should be redirected to the inventory page', async function () {",
      "const isInventory = await loginPage.isInventoryPage();",
      "expect(isInventory).to.be.true;",
      "});",

      "Then('I should see an error message {string}', async function (expectedMessage) {",
      "const actualMessage = await loginPage.getErrorMessage();",
      "expect(actualMessage.trim()).to.equal(expectedMessage);",
      "});"

    ],
    "few_shot_assistant_page_code": [
      "// page object class - login.page.js",
      "class LoginPage {",
      "constructor(page) {",
      "this.page = page;",
      "this.usernameInput = '#user-name';",
      "this.passwordInput = '#password';",
      "this.loginButton = '#login-button';",
      "this.errorMessage = '[data-test=\"error\"]';",
      "}",

      "async navigate() {",
      "await this.page.goto('https://www.saucedemo.com/');",
      "}",

      "async login(username, password) {",
      "await this.page.fill(this.usernameInput, username);",
      "await this.page.fill(this.passwordInput, password);",
      "await this.page.click(this.loginButton);",
      "}",

      "async getErrorMessage() {",
      "return this.page.textContent(this.errorMessage);",
      "}",

      "async isInventoryPage() {",
      "return this.page.url().includes('inventory.html');",
      "}",
      "}",

      "module.exports = LoginPage;"

    ]
  }
  